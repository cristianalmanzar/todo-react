{"version":3,"sources":["reducers/todoReducer.js","components/Todo/SearchBar.js","components/Todo/Task.js","components/Todo/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","SearchBar","className","placeholder","dispatch","useState","input","setInput","onSubmit","e","preventDefault","Date","getTime","desc","done","value","onChange","target","Task","data","map","i","key","onClick","todoId","initialState","TodoApp","useReducer","todos","length","ReactDOM","render","document","getElementById"],"mappings":"2KAAaA,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC/C,OAASA,EAAOC,MACZ,IAAK,MACD,MAAM,GAAN,mBAAYF,GAAZ,CAAmBC,EAAOE,UAC9B,IAAK,SACD,OAAOH,EAAMI,QAAQ,SAAAC,GAAI,OAAIA,EAAKC,KAAOL,EAAOE,WAEpD,QACI,OAAOH,ICJNO,EAAY,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SAAc,EACpCC,mBAAS,IAD2B,mBACvDC,EADuD,KAChDC,EADgD,KAyB9D,OACI,oCACI,0BAAMC,SApBO,SAACC,GAClBA,EAAEC,iBAEF,IAAMX,EAAO,CACTC,IAAI,IAAIW,MAAOC,UACfC,KAAMP,EACNQ,MAAM,GAQVV,EALe,CACXR,KAAM,MACNC,QAASE,KASqBG,UAAU,UACpC,2BACIN,KAAK,OACLM,UAAWA,EACXa,MAAOT,EACPU,SA7BK,SAACP,GAClBF,EAASE,EAAEQ,OAAOF,QA6BNZ,YAAaA,OClCpBe,EAAO,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMf,EAAc,EAAdA,SAaxB,OACI,oCACI,yBAAKF,UAAU,kBACX,yBAAKA,UAAU,QACX,4BAEIiB,EAAKC,KAAK,SAACrB,EAAMsB,GAAP,OACN,wBAAIC,IAAKvB,EAAKC,GAAIE,UAAU,QACvBmB,EAAI,EADT,KACgBtB,EAAKc,KACjB,0BAAMX,UAAU,SAASqB,QAAU,kBApBzCC,EAoB4DzB,EAAKC,QAbnFI,EALe,CACXR,KAAM,SACNC,QAAS2B,IAJI,IAACA,IAoBM,UAMZ,iCCxBdC,G,MAAe,CACjB,CACIzB,GAAI,EACJa,KAAM,eACNC,KAAM,SAGV,CACId,GAAI,EACJa,KAAM,cACNC,KAAM,SAGV,CACId,GAAI,EACJa,KAAM,eACNC,KAAM,WAKDY,EAAU,WAAO,IAAD,EAEGC,qBAAWlC,EAAagC,GAF3B,mBAEjBG,EAFiB,KAEVxB,EAFU,KAIzB,OACI,6BACI,yBAAKF,UAAU,oBACX,wBAAIA,UAAU,SAAd,eAAmC0B,EAAMC,OAAzC,OACA,kBAAC,EAAD,CAAW3B,UAAW,YAAaC,YAAa,oBAAqBC,SAAUA,KAGnF,yBAAKF,UAAU,UACX,kBAAC,EAAD,CAAMiB,KAAMS,EAAOxB,SAAUA,OCjC7C0B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.32e28445.chunk.js","sourcesContent":["export const todoReducer = (state = [], action) => {\n    switch ( action.type ) {\n        case 'add':\n            return [ ...state, action.payload];\n        case 'delete':\n            return state.filter( todo => todo.id !== action.payload );\n    \n        default:\n            return state;\n    }\n}\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport const SearchBar = ({ className, placeholder, dispatch}) => {\n    const [input, setInput] = useState('');\n\n    const handleChange = (e) => {\n        setInput(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const todo = {\n            id: new Date().getTime(),\n            desc: input,\n            done: false\n        }\n\n        const action = {\n            type: 'add',\n            payload: todo\n        }\n\n        dispatch(action);\n\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit} className=\"center\">\n                <input\n                    type=\"text\"\n                    className={className}\n                    value={input}\n                    onChange={ handleChange}\n                    placeholder={placeholder}\n                />\n            </form>\n        </>\n    )\n}\n\nSearchBar.propTypes = {\n    className: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Task = ({data, dispatch}) => {\n\n    const handleDelete = (todoId) => {\n\n        const action = {\n            type: 'delete',\n            payload: todoId\n        }\n\n        dispatch(action);\n\n    }\n\n    return (\n        <>\n            <div className=\"item-container\">\n                <div className=\"grid\">\n                    <ul>\n                    {\n                        data.map( (todo, i) =>  (\n                            <li key={todo.id} className=\"item\">\n                                {i + 1 }) { todo.desc}\n                                <span className=\"delete\" onClick={ () => handleDelete(todo.id)}  >X</span>\n                            </li>\n                        ))\n                        \n                    }\n                    </ul>\n                    <hr/>\n                </div>\n            </div>  \n        </>\n    )\n}\n\n\nTask.propTypes = {\n    data: PropTypes.array.isRequired\n}\n","import React, {useReducer, useState} from 'react';\nimport {todoReducer} from '../../reducers/todoReducer' \nimport { SearchBar } from './SearchBar';\nimport { Task } from './Task';\nimport './todo.css';\n\n\nconst initialState = [\n    {\n        id: 0,\n        desc: 'Learn React ',\n        done: 'False'\n\n    },\n    {\n        id: 1,\n        desc: 'Learn CSS  ',\n        done: 'False'\n\n    },\n    {\n        id: 2,\n        desc: 'Learn Node  ',\n        done: 'False'\n\n    }\n];\n\nexport const TodoApp = () => {\n\n    const [ todos, dispatch ] = useReducer(todoReducer, initialState);\n\n    return (\n        <div>\n            <div className=\"header-container\">\n                <h1 className=\"title\"> Todo App ( {todos.length} ) </h1>\n                <SearchBar className={'add-input'} placeholder={'Insert a new task'} dispatch={dispatch}/>\n            </div>\n\n            <div className=\"center\">\n                <Task data={todos} dispatch={dispatch} />\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoApp } from './components/Todo/TodoApp';\n\n\n\nReactDOM.render(\n    <TodoApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}